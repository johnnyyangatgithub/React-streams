{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/streams/client/src/components/streams/StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from './streamForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamEdit extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), this.props.stream.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/johnny/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","console","log","componentDidMount","props","match","params","id","render","stream","title","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAKzBC,UAAD,IAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,KAPoC;AAAA;;AACrCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWV,WAAX,CAAuB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAFvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApBoC;;AAuBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAed,OAAO,CAACkB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,UAA1C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from './streamForm';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n        console.log(formValues);\n    }\n\n    render() {\n        if (!this.props.stream) {\n            return <div>Loading...</div>\n        }\n\n        return (\n            <div>\n                <h3></h3>\n                {this.props.stream.title}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit);"]},"metadata":{},"sourceType":"module"}