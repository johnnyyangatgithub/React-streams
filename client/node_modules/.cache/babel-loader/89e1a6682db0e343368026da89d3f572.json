{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/streams/client/src/components/streams/StreamList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderList = () => {\n      return this.props.streams.map(stream => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"large middle icon aligned camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: stream.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)]\n        }, stream.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.is}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n  } //用来看用户是否登陆来取决于现实什么给用户，里面的this.props.isSignedIn的调用是从下面的mapStateToProps传入的\n\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: [\" \", this.renderList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/johnny/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","renderList","props","streams","map","stream","renderAdmin","title","description","id","componentDidMount","userId","currentUserId","is","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,eAA7B;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAMrCC,UANqC,GAMxB,MAAM;AACf,aAAO,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAwBC,MAAD,IAAY;AACtC,4BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,qBACK,KAAKC,WAAL,CAAiBD,MAAjB,CADL,eAEI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,uBACKA,MAAM,CAACE,KADZ,eAEI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,wBACKF,MAAM,CAACG;AADZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAA2BH,MAAM,CAACI,EAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAYH,OAbM,CAAP;AAcH,KArBoC;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWJ,YAAX;AACH;;AAmBDQ,EAAAA,WAAW,CAACD,MAAD,EAAS;AAChB,QAAIA,MAAM,CAACM,MAAP,KAAkB,KAAKT,KAAL,CAAWU,aAAjC,EAAgD;AAC5C,0BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,iBAAgBP,MAAM,CAACQ,EAAG,EAArC;AAAwC,UAAA,SAAS,EAAC,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ,GAhCoC,CAiCrC;;;AACAC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKZ,KAAL,CAAWa,UAAf,EAA2B;AACvB,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,wBAAkC,KAAKhB,UAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,KAAKa,YAAL,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApDoC;;AAqDxC;;AAED,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHhB,IAAAA,OAAO,EAAEiB,MAAM,CAACC,MAAP,CAAcF,KAAK,CAAChB,OAApB,CADN;AAEHS,IAAAA,aAAa,EAAEO,KAAK,CAACG,IAAN,CAAWX,MAFvB;AAGHI,IAAAA,UAAU,EAAEI,KAAK,CAACG,IAAN,CAAWP;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAenB,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderList = () => {\n        return this.props.streams.map((stream) => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle icon aligned camera\" />\n                    <div className=\"content\">\n                        {stream.title}\n                        <div className=\"description\">\n                            {stream.description}\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    renderAdmin(stream) {\n        if (stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/${stream.is}`} className=\"ui button primary\">Edit</Link>\n                    <button className=\"ui button negative\">Delete</button>\n                </div>\n            );\n        }\n    }\n    //用来看用户是否登陆来取决于现实什么给用户，里面的this.props.isSignedIn的调用是从下面的mapStateToProps传入的\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: 'right' }}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">Create Stream</Link>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\"> {this.renderList()}</div>\n                {this.renderCreate()}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}