{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = () => {};\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '351529754932-prpck25o6oqaev4vlgrrd41j82a99ukc.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        }); //listener\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"no idea if signed in ot not\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I'm signed in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I'm not signed in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/johnny/streams/client/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","onAuthChange","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","listen","renderAuthButton","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD6B;;AAAA,SAiBrCC,YAjBqC,GAiBtB,MAAM,CAEpB,CAnBoC;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEd,UAAAA,UAAU,EAAE,KAAKW,IAAL,CAAUX,UAAV,CAAqBe,GAArB;AAAd,SAAd,EAFU,CAGV;;AACA,aAAKJ,IAAL,CAAUX,UAAV,CAAqBgB,MAArB,CAA4B,KAAKf,YAAjC;AACH,OARD;AASH,KAVD;AAWH;;AAMDgB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKlB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC9B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAEDkB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAjCoC;;AAoCzC,eAAepB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n    state = { isSignedIn: null };\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '351529754932-prpck25o6oqaev4vlgrrd41j82a99ukc.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n                //listener\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    };\n\n    onAuthChange = () => {\n\n    };\n\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return <div>no idea if signed in ot not</div>;\n        } else if (this.state.isSignedIn) {\n            return <div>I'm signed in!</div>;\n        } else {\n            return <div>I'm not signed in </div>;\n        }\n    };\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}