{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/streams/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '351529754932-prpck25o6oqaev4vlgrrd41j82a99ukc.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get()); //listener\n\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.auth.signOut(),\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.auth.signIn(),\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \"Sign in with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: this.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/johnny/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","props","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","get","listen","renderAuthButton","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD6B;;AAAA,SAiBrCC,YAjBqC,GAiBrBD,UAAD,IAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZ,aAAKE,KAAL,CAAWP,MAAX;AACH,OAFD,MAEO;AACH,aAAKO,KAAL,CAAWN,OAAX;AACH;AACJ,KAvBoC;AAAA;;AAGrCO,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKb,YAAL,CAAkB,KAAKW,IAAL,CAAUZ,UAAV,CAAqBe,GAArB,EAAlB,EAFU,CAGV;;AACA,aAAKH,IAAL,CAAUZ,UAAV,CAAqBgB,MAArB,CAA4B,KAAKf,YAAjC;AACH,OARD;AASH,KAVD;AAWH;;AAUDgB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKf,KAAL,CAAWF,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKE,KAAL,CAAWF,UAAf,EAA2B;AAC9B,0BACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKY,IAAL,CAAUhB,OAAV,EAAvB;AAA4C,QAAA,SAAS,EAAC,sBAAtD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPM,MAOA;AACH,0BACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKgB,IAAL,CAAUjB,MAAV,EAAvB;AAA2C,QAAA,SAAS,EAAC,sBAArD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AAEDuB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AA/CoC;;AAkDzC,MAAME,eAAe,GAAGpB,KAAK,IAAI;AAC7B,SAAO;AAAEC,IAAAA,UAAU,EAAE,KAAKY,IAAL,CAAUZ;AAAxB,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n    state = { isSignedIn: null };\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '351529754932-prpck25o6oqaev4vlgrrd41j82a99ukc.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                //listener\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    };\n    //Helper function\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.signIn();\n        } else {\n            this.props.signOut();\n        }\n    };\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <button onClick={() => this.auth.signOut()} className='ui red google button'>\n                    <i className='google icon' />\n                    Sign Out\n                </button>\n            );\n        } else {\n            return (\n                <button onClick={() => this.auth.signIn()} className='ui red google button'>\n                    <i className='google icon' />\n                    Sign in with Google\n                </button>\n            );\n        }\n    };\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return { isSignedIn: this.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}