{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/streams/client/src/components/streams/StreamDelete.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../Modal\";\nimport { fetchStream } from '../../actions';\nimport history from '../../history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return (\n      /*#__PURE__*/\n      //React.Fragment\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    );\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"StreamDelete\", /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Stream\",\n        content: \"Are you sure you want to delete this stream?\",\n        actions: this.renderActions(),\n        onDismiss: () => history.push('/')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams\n  };\n};\n\nexport default connect(null, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/johnny/streams/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Modal","fetchStream","history","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","render","push","mapStateToProps","state","ownProps","stream","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;;;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAEvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ;AAAA;AAAQ;AACJ;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AADJ;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8CAEI,QAAC,KAAD;AACI,QAAA,KAAK,EAAC,eADV;AAEI,QAAA,OAAO,EAAC,8CAFZ;AAGI,QAAA,OAAO,EAAE,KAAKD,aAAL,EAHb;AAII,QAAA,SAAS,EAAE,MAAMR,OAAO,CAACU,IAAR,CAAa,GAAb;AAJrB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA3BsC;;AA8B3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEC,IAAAA,MAAM,EAAEF,KAAK,CAACG;AAAhB,GAAP;AACH,CAFD;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA;AAAF,CAAP,CAAP,CAA+BE,YAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../Modal\";\nimport { fetchStream } from '../../actions';\nimport history from '../../history';\n\nclass StreamDelete extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions() {\n        return (//React.Fragment\n            <>\n                <button className='ui button negative'>Delete</button>\n                <button className='ui button'>Cancel</button>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                StreamDelete\n                <Modal\n                    title='Delete Stream'\n                    content='Are you sure you want to delete this stream?'\n                    actions={this.renderActions()}\n                    onDismiss={() => history.push('/')}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams }\n};\n\nexport default connect(null, { fetchStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}